library(shiny); library(shinydashboard); library(pwr); library(gsDesign)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
# Matt Partridge
# Advisor: Julian Wolfson
##########################################
############## Things To Do ##############
##########################################
# This is the working document for combining all of the tabs together
# First, try to add One Mean and One Proportion together
############################## Libraries ##############################
library(shiny); library(shinydashboard); library(pwr); library(gsDesign)
############################## Libraries ##############################
ui = dashboardPage(
dashboardHeader( title = "Sample Size Calculations" ),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "OM"),
menuItem("One Sample Proportion", tabName = "OP"),
menuItem("Two Sample Means", tabName = "TM"),
menuItem("Two Sample Proportions", tabName = "TP"),
menuItem("Time to Event", tabName = "TTE")
)
),
dashboardBody(
tabItems(
############################## One Mean ##############################
{
tabItem(tabName = "OM",
fluidRow(
box(width = 12,
selectInput(inputId = "solvefor_OM",
label = "Solve For",
choices = c("Sample Size", "Power", "Precision"),
selected = "Sample Size",
width = "100%")),
uiOutput("OM")))
},
############################## One Mean ##############################
############################## One Proportion ##############################
{
tabItem(tabName = "OP",
fluidRow(
box(width = 12,
selectInput(inputId = "solvefor_OP",
label = "Solve For",
choices = c("Sample Size", "Power", "Precision"),
selected = "Sample Size",
width = "100%")),
uiOutput("OP")))
},
############################## One Proportion ##############################
############################## Two Means ##############################
{
tabItem(tabName = "TM",
fluidRow(
box(width = 12,
selectInput(inputId = "solvefor_TM",
label = "Solve For",
choices = c("Sample Size", "Power"),
selected = "Sample Size",
width = "100%")),
uiOutput("TM")))
},
############################## Two Means ##############################
############################## Two Proportions ##############################
{
tabItem(tabName = "TP",
fluidRow(
box(width = 12,
selectInput(inputId = "solvefor_TP", label = "Solve For", choices = c("Sample Size", "Power"), selected = "Sample Size", width = "100%")),
uiOutput("TP")))
}
############################## Two Proportions ##############################
############################## Time to Event ##############################
{
tabItem(tabName = "TTE")
}
############################## Time to Event ##############################
) # tabItems
) # dashboardBody
) # dashboardPage
shiny::runApp()
library(shiny); library(shinydashboard); library(pwr); library(gsDesign)
library(shiny); library(shinydashboard); library(pwr); library(gsDesign)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny); library(shinydashboard); library(pwr); library(gsDesign)
4903+sqrt(4903)
shiny::runApp()
shiny::runApp()
library(shiny); library(shinydashboard); library(pwr); library(gsDesign)
nSurvival()
87/136
nSurvival(beta = 0.2)
65/102
nSurvival(beta = 0.3)
51/80
nSurvival(beta = 0.15)
75/116
nSurvival(beta = 0.1)
87/136
nSurvival(beta = 0.17)
70/110
nSurvival(beta = 0.15)
75/116
nSurvival(beta = 0.25)
57/90
x = nSurvival(beta = 0.25)
x$nEvents
x = nSurvival(beta = 0.1)
x$nEvents/x$n
x = nSurvival(beta = 0.2)
x$nEvents/x$n
x = nSurvival(beta = 0.3)
x$nEvents/x$n
x = nSurvival(beta = 0.15)
x$nEvents/x$n
nEvents()
nEvents(n = 100, beta = NULL)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
survival = nSurvival(lambda1 = 1, lambda2 = 1.5, alpha = 0.05, Ts = 5, Tr = 2.5, eta = 0, ratio = 1, alpha = 0.05, beta = 0.2, approx = F, type = "rr", entry = "unif", gamma = NA)
survival = nSurvival(lambda1 = 1, lambda2 = 1.5, alpha = 0.05, Ts = 5, Tr = 2.5, eta = 0, ratio = 1, beta = 0.2, approx = F, type = "rr", entry = "unif", gamma = NA)
epp = survival$nEvents/survival$n
nevents = 500*epp
power = nEvents(hr = 1.5/1, alpha = 0.05, beta = NULL, ratio = 1, sided = 2, hr0 = 1, n = nevents, tbl = F)
power
x = nSurvival(lambda1 = 1, lambda2 = 1.5, Ts = 5, Tr = 2.5, eta = 0, ratio = 1, alpha = 0.05, beta = 0.2, sided = 2, approx = F, type = "rr", entry = "unif", gamma = NA)
x$n
survival = nSurvival(lambda1 = 1, lambda2 = 1.5, alpha = 0.05, Ts = 5, Tr = 2.5, eta = 0, ratio = 1, beta = 0.2, approx = F, type = "rr", entry = "unif", gamma = NA)
survival$n
epp = survival$nEvents/survival$n
nevents = 152.729*epp
power = nEvents(hr = 1.5/1, alpha = 0.05, beta = NULL, ratio = 1, sided = 2, hr0 = 1, n = nevents, tbl = F)
power
nevents
power = nEvents(hr = 1.5/1, alpha = 0.05, beta = NULL, ratio = 1, sided = 2, hr0 = 1, n = 500, tbl = F)
power
1 - power
power = nEvents(hr = 1.5/1, alpha = 0.05, beta = NULL, ratio = 1, sided = 2, hr0 = 1, n = 100, tbl = F)
1 - power
power = nEvents(hr = 1.5/1, alpha = 0.05, beta = NULL, ratio = 1, sided = 2, hr0 = 1, n = 5, tbl = F)
1 - power
