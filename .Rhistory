shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%"))),
conditionalPanel(
condition = "input.solveforonemean == 'Sample Size'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01),
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)),
# Outputs
box(
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100)))),
conditionalPanel(
condition = "input.solveforonemean == 'Power'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)))),
conditionalPanel(
condition = "input.solveforonemean == 'Precision'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "MOEonemean.n", label = "+/- Precision", min = 0, max = 3, value = 1),
sliderInput(inputId = "MOEonemean.s", label = "", min = 0, max = 3, value = 1),
sliderInput(inputId = "CIonemean", label = "Confidence Interval", min = 0, max = 5, value = c(0.402, 0.598)))))),
), # dashboardPage
) # shinyApp
server()
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%"))),
conditionalPanel(
condition = "input.solveforonemean == 'Sample Size'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01),
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)),
# Outputs
box(
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100)))),
conditionalPanel(
condition = "input.solveforonemean == 'Power'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)))),
conditionalPanel(
condition = "input.solveforonemean == 'Precision'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "MOEonemean.n", label = "+/- Precision", min = 0, max = 3, value = 1),
sliderInput(inputId = "MOEonemean.s", label = "", min = 0, max = 3, value = 1),
sliderInput(inputId = "CIonemean", label = "Confidence Interval", min = 0, max = 5, value = c(0.402, 0.598)))))
), # dashboardPage
server = function(input, output, clientData, session){}
) # shinyApp
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%")))))), # dashboardPage
server = function(input, output, clientData, session){}
) # shinyApp
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"))),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%"))))))
), # dashboardPage
server = function(input, output){
}
) # shinyApp
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"))),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%"))),
conditionalPanel(
condition = "input.solveforonemean == 'Sample Size'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01),
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)),
# Outputs
box(
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100)))),
conditionalPanel(
condition = "input.solveforonemean == 'Power'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)))),
conditionalPanel(
condition = "input.solveforonemean == 'Precision'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "MOEonemean.n", label = "+/- Precision", min = 0, max = 3, value = 1),
sliderInput(inputId = "MOEonemean.s", label = "", min = 0, max = 3, value = 1),
sliderInput(inputId = "CIonemean", label = "Confidence Interval", min = 0, max = 5, value = c(0.402, 0.598))))))))
), # dashboardPage
server = function(input, output){
}
) # shinyApp
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"))),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%"))),
conditionalPanel(
condition = "input.solveforonemean == 'Sample Size'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01),
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)),
# Outputs
box(
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100)))),
conditionalPanel(
condition = "input.solveforonemean == 'Power'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)))),
conditionalPanel(
condition = "input.solveforonemean == 'Precision'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "MOEonemean.n", label = "+/- Precision", min = 0, max = 3, value = 1),
sliderInput(inputId = "MOEonemean.s", label = "", min = 0, max = 3, value = 1),
sliderInput(inputId = "CIonemean", label = "Confidence Interval", min = 0, max = 5, value = c(0.402, 0.598))))))))
), # dashboardPage
server = function(input, output, clientData, session){}
) # shinyApp
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"))),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%"))),
conditionalPanel(
condition = "input.solveforonemean == 'Sample Size'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01),
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)),
# Outputs
box(
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100)))),
conditionalPanel(
condition = "input.solveforonemean == 'Power'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)))),
conditionalPanel(
condition = "input.solveforonemean == 'Precision'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "MOEonemean.n", label = "+/- Precision", min = 0, max = 3, value = 1),
sliderInput(inputId = "MOEonemean.s", label = "", min = 0, max = 3, value = 1),
sliderInput(inputId = "CIonemean", label = "Confidence Interval", min = 0, max = 5, value = c(0.402, 0.598))))))))
), # dashboardPage
server = function(input, output, clientData, session){
}
) # shinyApp
shiny::runApp()
library(shiny); library(shinydashboard)
# One Mean App
shinyApp(
ui = dashboardPage(
dashboardHeader(title = "Sample Size Calculations"),
dashboardSidebar(
sidebarMenu(
menuItem("One Sample Mean", tabName = "onemean"))),
dashboardBody(
tabItems(
######################################
############## One Mean ##############
######################################
tabItem(tabName = "onemean",
fluidRow(
box(width = 12,
selectInput(inputId = "solveforonemean", label = "Solve For", choices = c("Sample Size", "Power", "Precision"), selected = "Precision", width = "100%"))),
conditionalPanel(
condition = "input.solveforonemean == 'Sample Size'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01),
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)),
# Outputs
box(
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100)))),
conditionalPanel(
condition = "input.solveforonemean == 'Power'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "nullmuonemean.n", label = "Null Hypothesis Mean", min = 0, max = 2, value = 1, step = 0.1),
sliderInput(inputId = "nullmuonemean.s", label = "", min = 0, max = 2, value = 1, step = 0.1),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "poweronemean.n", label = "Power", min = 0, max = 1, value = 0.8, step = 0.05),
sliderInput(inputId = "poweronemean.s", label = "", min = 0, max = 1, value = 0.8, step = 0.05)))),
conditionalPanel(
condition = "input.solveforonemean == 'Precision'",
fluidRow(
# Inputs
box(
numericInput(inputId = "muonemean.n", label = "Mu", min = 0, max = 2, value = 0.5, step = 0.1),
sliderInput(inputId = "muonemean.s", label = "", min = 0, max = 2, value = 0.5, step = 0.1),
numericInput(inputId = "sdonemean.n", label = "SD", min = 0, max = NA, value = 1, step = 0.1),
sliderInput(inputId = "sdonmean.s", label = "", min = 0, max = 5, value = 1, step = 0.1),
numericInput(inputId = "Nonemean.n", label = "N", min = 0, max = NA, value = 100),
sliderInput(inputId = "Nonemean.s", label = "", min = 0, max = 1000, value = 100),
numericInput(inputId = "alphaonemean.n", label = "Significance", min = 0, max = 1, value = 0.05, step = 0.01),
sliderInput(inputId = "alphaonemean.s", label = "", min = 0, max = 1, value = 0.05, step = 0.01)),
# Outputs
box(
numericInput(inputId = "MOEonemean.n", label = "+/- Precision", min = 0, max = 3, value = 1),
sliderInput(inputId = "MOEonemean.s", label = "", min = 0, max = 3, value = 1),
sliderInput(inputId = "CIonemean", label = "Confidence Interval", min = 0, max = 5, value = c(0.402, 0.598))))))))
), # dashboardPage
server = function(input, output, clientData, session){
}
) # shinyApp
